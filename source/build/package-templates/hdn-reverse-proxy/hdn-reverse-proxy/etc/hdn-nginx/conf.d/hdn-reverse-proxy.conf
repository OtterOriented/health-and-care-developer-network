# http://serverfault.com/questions/381545/how-to-extract-only-the-file-name-from-the-request-uri
# Gets the basename of the original request
map $request_uri $request_basename
{
	~/(?<captured_request_basename>[^/?]*)(?:\?|$) $captured_request_basename;
}

include /etc/hdn-reverse-proxy/upstreams/*.conf;

server
{
	listen [::ffff:127.0.0.1]:80;
	listen [::1]:80;
	
	# HOSTA, HOSTB need to go here!!! OR NOT ???? 
	server_name localhost ip6-localhost ip6-loopback;
	
	more_set_headers "Server: HDN";
	
	add_header Strict-Transport-Security "max-age=8640000";
	add_header Expires "Thu, 31 Dec 2037 23:55:55 GMT";
	add_header Cache-Control "public, max-age=315360000";
	
	return 301 http://$hostname.cloudapp.net$request_uri;
}

#server
#{
#	listen [::ffff:127.0.0.1]:443 ssl;
#	listen [::1]:443 ssl;
#	server_name localhost ip6-localhost ip6-loopback;
#	
#	more_set_headers "Server: HDN";
#	
#	add_header Strict-Transport-Security "max-age=8640000";
#	add_header Expires "Thu, 31 Dec 2037 23:55:55 GMT";
#	add_header Cache-Control "public, max-age=315360000";
#	
#	return 301 https://$hostname.cloudapp.net$request_uri;
#}

server
{
	listen [::]:80 default_server backlog=1024 deferred so_keepalive=off;
	#listen [::]:443 default_server backlog=1024 deferred so_keepalive=off ssl;
	#ssl_certificate "/etc/hdn-reverse-proxy/certificate-and-bundle.pem";
	#ssl_certificate_key "/etc/hdn-reverse-proxy/privatekey.pem";
	
	#server_name $hostname.cloudapp.net;
	server_name *.cloudapp.net;
	server_name_in_redirect on;
	
	rewrite_log on;
	
	# Files without extensions are html
	default_type text/html;
	
	more_set_headers "Server: HDN";
	more_set_headers -s 405 "Allow: GET, HEAD";
	
	root /srv/hdn-reverse-proxy;
	
	# Do not allow direct linking to static gz files
	location ~ \.(?:gz)$
	{
		internal;
	}
	
	include /etc/hdn-reverse-proxy/locations/*.conf;
}
